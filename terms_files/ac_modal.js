(function (e, t) { var n; var r = false; try { r = parent && parent.acPU } catch (i) { } if (r) { n = parent.acPU } else { var s = function () { this._variableName = "acPU"; this._currentIndex = 0; this._previousIndex = null; this._isShown = false; this._modals = new Array; this._moveModalInfo = null; this._isDragging = false; this._bodyOverflow = null; this._modalMaskCssClass = "ac-modal-mask"; this._modalCssClass = "ac-modal"; this._modalTitleCssClass = "ac-modal-title"; this._modalCloseCssClass = "ac-modal-close"; this._modalIframeCssClass = "ac-modal-iframe"; this._modalContentCssClass = "ac-modal-content"; this._modalLoaderCssClass = "ac-modal-loader"; this._modalFooterCssClass = "ac-modal-footer"; this._defaults = { width: 800, height: 600, zIndex: 2e12, title: null, onClose: null } }; s.prototype = { Open: function (e, t, n, r) { this.open(e, { width: t, height: n, onClose: r }) }, open: function (n, r) { var i = this, s = t.extend(i._defaults, r, {}); i.init(s); var o = i._modals[i._currentIndex], u = o.modalTitle.children("span"), a = "Popup Window"; o.modalIframe.unbind("load.acPU").bind("load.acPU", { m: o, options: s }, i._frameLoaded); if (i._currentIndex > 0) { var f = t("." + i._modalCssClass).not(o.modal); f.css({ opacity: "0.4", filter: "alpha(opacity=40)" }); f.find("." + i._modalTitleCssClass).unbind("mousedown.acPU") } if (i._previousIndex == null || i._previousIndex < 0) { i._bodyOverflow = t("body").css("overflow") } t("body").css("overflow", "hidden"); var l = t(e).width(), c = t(e).height(), h = t(e).scrollLeft(), p = t(e).scrollTop(), d = i._calculateDimensions(o, s, l, c, h, p); o.modalLoader.css({ left: d.width / 2 - o.modalLoader.width() / 2, top: d.height / 2 - o.modalLoader.height() / 2 }); o.modalIframe.attr("src", n); o.modal.css({ width: d.width, height: d.height, top: d.y, left: d.x }).show(); o.modalMask.css({ top: p, left: h, width: l, height: c }).show(); i._previousIndex = i._currentIndex; i._currentIndex = i._currentIndex + 1; i._isShown = true }, Close: function (e) { this.close(e) }, close: function (n) { var r = this; if (r._isShown) { var i = r._modals[r._previousIndex], s = i.modal, o = i.modalMask, u = i.onClose; r._modals[r._previousIndex] = null; r._currentIndex = r._previousIndex; r._previousIndex = r._previousIndex - 1; s.remove(); if (r._previousIndex < 0) { o.remove(); t("body").css("overflow", r._bodyOverflow); t(e).unbind(".acPU"); r._bodyOverflow = null; r._previousIndex = null; r._isShown = false } else { i = r._modals[r._previousIndex]; i.modal.css({ opacity: "1.0", filter: "alpha(opacity=100)" }); i.modalTitle.bind("mousedown.acPU", { pu: r, index: r._previousIndex }, r._dragStart) } if (u) { u(n) } } }, resize: function (n) { var r = n.data.pu, i = n.data.index, s = n.data.options, o = r._modals[i], u = t(e).height(), a = t(e).width(), f = e.scrollX, l = e.scrollY, c = r._calculateDimensions(o, s, a, u, f, l); o.modal.css({ width: c.width, height: c.height, top: c.y, left: c.x }) }, scroll: function (e) { var t = e.data.pu; t.resize(e) }, init: function (n) { var r = this; var i = t("#dvModalMask"); if (i.length == 0) { i = t("<div />").attr("id", "dvModalMask").addClass(r._modalMaskCssClass); i.css({ width: "auto", height: "auto", position: "absolute", display: "none", overflow: "hidden", zIndex: n.zIndex }); i.appendTo("body") } var s = t("<div />").addClass(r._modalCssClass).addClass("padded1"); s.css({ width: "auto", height: "auto", position: "absolute", display: "none", zIndex: n.zIndex }); r._disableSelection(s); var o = { pu: r, index: r._currentIndex }; var u = t("<div />").addClass(r._modalTitleCssClass).css("display", "none"); u.bind("mousedown.acPU", o, r._dragStart); r._disableSelection(u); u.appendTo(s); var a = t("<div />").addClass(r._modalCloseCssClass).html("&times;"); a.bind("click.acPU", o, function () { r.close() }); a.appendTo(u); var f = t("<span />"); r._disableSelection(f); u.append(f); var l = t("<div />").addClass(r._modalContentCssClass); l.css("display", "none"); l.appendTo(s); var c = t("<div />").addClass(r._modalLoaderCssClass); c.css("position", "absolute"); c.appendTo(s); var h = t("<iframe />").addClass(r._modalIframeCssClass); h.css({ width: "100%", border: "0 none" }).attr("frameborder", "no"); h.appendTo(l); var p = t("<div />").addClass(r._modalFooterCssClass).css("display", "none"); p.appendTo(s); o.options = n; s.appendTo("body"); t(e).bind("resize.acPU", o, r.resize); t(e).bind("scroll.acPU", o, r.scroll); r._modals[r._currentIndex] = { modal: s, modalTitle: u, modalClose: a, modalMask: i, modalIframe: h, modalContent: l, modalLoader: c, modalFooter: p, onClose: n.onClose } }, _calculateDimensions: function (e, t, n, r, i, s) { var o = t.height, u = t.width, a = e.modalClose.height(), f = e.modalClose.width(); if (u + f > n) { u = n - f } if (o + a > r) { o = r - a } if (!i) { i = 0 } if (!s) { s = 0 } var l = n / 2 - u / 2 + i, c = r / 2 - o / 2 + s, h = { width: u, height: o, x: l, y: c }; return h }, _frameLoaded: function (e) { var t = e.data.m, n = e.data.options, r = t.modalTitle.children("span"), i = "AmeriCommerce Popup"; t.modalLoader.css("display", "none"); t.modalContent.css("display", "block"); try { var s = t.modalIframe.contents().find("title").html(); if (s.length > 0) { i = s } } catch (o) { } if (n.title) { i = n.title } r.html(i); t.modalTitle.css("display", "block"); t.modalFooter.css("display", "block") }, _dragStart: function (e) { var n = e.data.pu, r = e.data.index, i = n._modals[r]; n._moveModalInfo = { startMouseX: e.pageX, startMouseY: e.pageY, startModalX: parseInt(i.modal.css("left").replace("px", "")), startModalY: parseInt(i.modal.css("top").replace("px", "")) }; t(document).bind("mouseup.acPU", e.data, n._dragEnd); t(document).bind("mousemove.acPU", e.data, n._dragMove); i.modalIframe.css({ display: "none" }); n._isDragging = true }, _dragMove: function (e) { var t = e.data.pu, n = e.data.index, r = t._modals[n], i = e.pageX, s = e.pageY, o = i - t._moveModalInfo.startMouseX, u = s - t._moveModalInfo.startMouseY; r.modal.css({ left: t._moveModalInfo.startModalX + o, top: t._moveModalInfo.startModalY + u }) }, _dragEnd: function (e) { var n = e.data.pu, r = e.data.index, i = n._modals[r]; n._isDragging = false; n._moveModalInfo = null; t(document).unbind("mouseup.acPU").unbind("mousemove.acPU"); i.modalIframe.css({ display: "block" }) }, _disableSelection: function (e) { e.attr("unselectable", "on").css("MozUserSelect", "none").bind("selectstart.acPU", function () { return false }) } }; n = new s } e.acPU = n; t.fn.acPU = function (e) { this.each(function () { var r = t(this); r.click(function (r) { var i = t(this).attr("href"); r.preventDefault(); n.open(i, e) }) }) } })(this, jQuery)